#!/usr/bin/env bash

set -euo pipefail

CURRENT_DIR=$(realpath "$(dirname "${BASH_SOURCE[0]}")")

source "$CURRENT_DIR/core/ansi"
if [ -z "${DOTFILES_PARENT_DIR:-}" ]; then
    ansi --red --bold "⚠ This script should not be called directly!" --newline
    ansi --newline
    ansi "Please use the main TUI interface:" --newline
    ansi "  ./script/main" --newline
    ansi --newline
    ansi "Or run the bootstrap first:" --newline
    ansi "  ./script/bootstrap" --newline
    exit 1
fi
DOTFILES_PARENT_DIR=$(dirname "$CURRENT_DIR")

DOTFILES_SESSION_ID="setup-$(date +%Y%m%d-%H%M%S)"

export DOTFILES_SESSION_ID
export DOTFILES_PARENT_DIR

mkdir -p "$DOTFILES_PARENT_DIR/tmp"

source "$CURRENT_DIR/core/logging"
source "$CURRENT_DIR/core/common"
source "$CURRENT_DIR/core/system"
source "$CURRENT_DIR/core/prerequisites"
source "$CURRENT_DIR/core/ui"

main() {
    show_standard_header

    gum style \
        --foreground "$INTERFACE_COLOR" \
        --border normal \
        --border-foreground "$INTERFACE_SECONDARY" \
        --padding "0 1" \
        --width "$((INTERFACE_WIDTH - 1))" \
        "▶ SETUP SEQUENCE:" \
        "" \
        "  [01] PACKAGE MANAGER BOOTSTRAP" \
        "  [02] APPLICATION INSTALL" \
        "  [03] DEVELOPMENT STACK INIT" \
        "  [04] DOTFILE CONFIGURATION" \
        "  [05] SYSTEM PREFERENCES"

    ansi --newline

    if ! gum confirm "AUTHORIZE SETUP SEQUENCE?" \
        --prompt.foreground "$INTERFACE_COLOR" \
        --selected.foreground "$INTERFACE_BG_COLOR" \
        --selected.background "$INTERFACE_COLOR" \
        --unselected.foreground "$INTERFACE_COLOR" \
        --affirmative "EXECUTE" \
        --negative "ABORT"; then
        gum style --foreground "$INTERFACE_ERROR" "SETUP SEQUENCE ABORTED"
        exit 0
    fi

    show_standard_header
    show_section_header "SYSTEM INIT"

    gum style --foreground "$INTERFACE_SECONDARY" "DEBUG LOG: $(get_debug_log_path)"
    ansi --newline

    export TASK_TITLE="SYSTEM INIT"

    run_with_progressive_spinner "BOOTSTRAPPING CORE SYSTEMS..." \
        "source '$CURRENT_DIR/core/common' && source '$CURRENT_DIR/core/prerequisites' && ensure_sudo && ensure_command_line_tools && ensure_homebrew"

    run_with_progressive_spinner "DEPLOYING DEPENDENCIES..." \
        "export DOTFILES_PARENT_DIR='$DOTFILES_PARENT_DIR' && source '$CURRENT_DIR/core/common' && source '$CURRENT_DIR/core/dependencies' && ensure_dependencies"

    run_with_progressive_spinner "INSTALLING APPLICATIONS..." \
        "export DOTFILES_PARENT_DIR='$DOTFILES_PARENT_DIR' && source '$CURRENT_DIR/core/common' && source '$CURRENT_DIR/core/dependencies' && ensure_applications"

    run_with_progressive_spinner "INITIALIZING DEVELOPMENT STACK..." \
        "export DOTFILES_PARENT_DIR='$DOTFILES_PARENT_DIR' && source '$CURRENT_DIR/core/common' && source '$CURRENT_DIR/core/dependencies' && ensure_development"

    run_with_progressive_spinner "CONFIGURING DEVELOPMENT ENVIRONMENT..." \
        "export DOTFILES_PARENT_DIR='$DOTFILES_PARENT_DIR' && source '$CURRENT_DIR/core/common' && source '$CURRENT_DIR/core/development' && ensure_development_environment"

    run_with_progressive_spinner "INITIALIZING DOTFILE CONFIGURATION..." \
        "if ! command -v chezmoi >/dev/null 2>&1; then brew install chezmoi; fi && chezmoi init --force --source '$DOTFILES_PARENT_DIR' && source '$CURRENT_DIR/core/system' && apply_dotfiles_and_shell"

    run_with_progressive_spinner "CONFIGURING SYSTEM PREFERENCES..." \
        "source '$CURRENT_DIR/core/prerequisites' && source '$CURRENT_DIR/core/system' && enable_touchid_sudo && configure_macos_preferences"

    run_with_progressive_spinner "INSTALLING SYSTEM FONTS..." \
        "source '$CURRENT_DIR/core/system' && ensure_fonts"

    show_completion "SETUP COMPLETE"

    ansi --newline
    if gum confirm "INITIATE SYSTEM REBOOT SEQUENCE?" \
        --prompt.foreground "$INTERFACE_COLOR" \
        --selected.foreground "$INTERFACE_BG_COLOR" \
        --selected.background "$INTERFACE_COLOR" \
        --unselected.foreground "$INTERFACE_COLOR" \
        --affirmative "EXECUTE" \
        --negative "DEFER"; then
        gum style --foreground "$INTERFACE_ERROR" "REBOOT SEQUENCE INITIATED - 60 SECONDS"
        sudo shutdown -r +1
        ansi --newline
        gum style --foreground "$INTERFACE_SECONDARY" "ABORT SEQUENCE: sudo killall shutdown"
    else
        gum style --foreground "$INTERFACE_SECONDARY" "REBOOT SEQUENCE DEFERRED - MANUAL RESTART REQUIRED"
    fi

    show_footer_prompt
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    main "$@"
fi
