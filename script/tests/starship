#!/bin/bash

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'

TESTS_RUN=0
TESTS_PASSED=0

cleanup() {
    cd /
    rm -rf "$TEST_DIR" 2> /dev/null || true
}

trap cleanup EXIT

TEST_DIR="/tmp/starship-test-$$"
mkdir -p "$TEST_DIR"
cd "$TEST_DIR"

echo -e "${CYAN}üöÄ Starship Configuration Test${NC}"

run_test() {
    local test_name="$1"
    local command="$2"
    local expected_pattern="$3"

    TESTS_RUN=$((TESTS_RUN + 1))
    echo -e "${YELLOW}Test $TESTS_RUN: $test_name${NC}"

    if eval "$command" | grep -q "$expected_pattern" 2> /dev/null; then
        echo -e "${GREEN}‚úÖ PASSED${NC}"
        TESTS_PASSED=$((TESTS_PASSED + 1))
    else
        echo -e "${RED}‚ùå FAILED${NC}"
        eval "$command" | head -3 2> /dev/null || echo "Command failed"
    fi
    echo
}

run_test "Starship Installation" "starship --version" "starship"
run_test "Config File Exists" "test -f ~/.config/starship.toml && echo 'exists'" "exists"
run_test "Valid TOML Syntax" "starship config --help >/dev/null 2>&1 && echo 'valid'" "valid"

git init --quiet
git config user.name "Test"
git config user.email "test@test.com"

echo "test" > test.txt
run_test "Git Branch Display" "starship prompt --pwd='$TEST_DIR' 2>/dev/null" "master\\|main"
run_test "Git Untracked Files" "starship prompt --pwd='$TEST_DIR' 2>/dev/null" "\\?"

git add test.txt
run_test "Git Staged Files" "starship prompt --pwd='$TEST_DIR' 2>/dev/null" "\\+"

echo "modified" >> test.txt
run_test "Git Modified Files" "starship prompt --pwd='$TEST_DIR' 2>/dev/null" "!"

run_test "Directory Display" "starship prompt --pwd='$TEST_DIR' 2>/dev/null" "starship-test"
run_test "Time Format" "starship prompt --pwd='$TEST_DIR' 2>/dev/null" "\\[.*:.*:.*\\]"
run_test "Success Character" "starship prompt --pwd='$TEST_DIR' --status=0 2>/dev/null" "‚ùØ"
run_test "Error Character" "starship prompt --pwd='$TEST_DIR' --status=1 2>/dev/null" "‚ùØ"
run_test "Separator Display" "starship prompt --pwd='$TEST_DIR' 2>/dev/null" "//"

if command -v python3 > /dev/null 2>&1; then
    run_test "Python Detection" "starship prompt --pwd='$TEST_DIR' 2>/dev/null" "üêç\\|3\\."
fi

if command -v node > /dev/null 2>&1; then
    run_test "Node.js Detection" "starship prompt --pwd='$TEST_DIR' 2>/dev/null" "‚¨¢"
fi

if command -v ruby > /dev/null 2>&1; then
    run_test "Ruby Detection" "starship prompt --pwd='$TEST_DIR' 2>/dev/null" "üíé"
fi

start_time=$(date +%s%N)
starship prompt --pwd="$TEST_DIR" > /dev/null 2>&1
end_time=$(date +%s%N)
duration=$(((end_time - start_time) / 1000000))

TESTS_RUN=$((TESTS_RUN + 1))
if [ $duration -lt 500 ]; then
    echo -e "${GREEN}‚úÖ Performance: ${duration}ms${NC}"
    TESTS_PASSED=$((TESTS_PASSED + 1))
else
    echo -e "${RED}‚ùå Performance: ${duration}ms (slow)${NC}"
fi

echo -e "${CYAN}Results: $TESTS_PASSED/$TESTS_RUN passed${NC}"

if [ $TESTS_PASSED -eq $TESTS_RUN ]; then
    echo -e "${GREEN}üéâ All tests passed!${NC}"
    exit 0
else
    echo -e "${RED}‚ö†Ô∏è Some tests failed${NC}"
    exit 1
fi
