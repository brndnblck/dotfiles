#!/usr/bin/env bash
source "$(dirname "${BASH_SOURCE[0]}")/ansi"


source "$(dirname "${BASH_SOURCE[0]}")/logging"



run() {
	command_log "Running: $1"
	if eval "$1"; then
		info_log "Command succeeded: $1"
		return 0
	else
		error_log "Command failed: $1"
		show_error "Command failed: $1"
		return 1
	fi
}

silent() {
	command_log "Running (silent): $1"
	
	# Use DOTFILES_DEBUG_LOG if set, otherwise fall back to default location
	local debug_log="${DOTFILES_DEBUG_LOG:-${DOTFILES_PARENT_DIR:-$PWD}/tmp/debug-$(date +%Y%m%d-%H%M%S).log}"
	mkdir -p "$(dirname "$debug_log")"
	
	# Log the command being executed
	echo "[$(date '+%H:%M:%S')] COMMAND (silent): $1" >> "$debug_log"
	
	if eval "$1" >> "$debug_log" 2>&1; then
		info_log "Command succeeded (silent): $1"
		echo "[$(date '+%H:%M:%S')] SUCCESS (silent): $1" >> "$debug_log"
		return 0
	else
		local exit_code=$?
		error_log "Command failed (silent): $1 (exit code: $exit_code)"
		echo "[$(date '+%H:%M:%S')] FAILED (silent): $1 (exit code: $exit_code)" >> "$debug_log"
		return $exit_code
	fi
}

show_loader() {
    ($1) &
    local pid=$!
    [ -n "$2" ] && message="$2" || message='Please wait...'
    local length=${#message}
    local i=0
    local loader='⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏'
    ansi --hide-cursor --no-restore
    
    # Handle interrupts in loader
    trap 'kill $pid 2>/dev/null; ansi --show-cursor; exit 130' INT TERM
    
    while ps a | awk '{print $1}' | grep -q "${pid}"; do
        i=$(( (i+1) % 10 ))
        ansi --blue-intense $(printf "\r   ${loader:$i:1}") >/dev/tty
        ansi --bold --no-restore >/dev/tty
        if [ -n "$message" ]; then
            printf " $message" >/dev/tty
        else
            printf ' Please wait...' >/dev/tty
        fi
        ansi --reset-attrib >/dev/tty
        sleep .02
    done

    # Reset trap
    trap - INT TERM
    
    ansi --green --bold --no-restore >/dev/tty
    printf " \r✓ " >/dev/tty
    ansi --white --faint --no-restore >/dev/tty
    printf " $message\n" >/dev/tty
    ansi --reset-attrib --reset-color
    ansi --show-cursor
}